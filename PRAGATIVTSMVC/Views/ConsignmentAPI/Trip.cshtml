@{
    Layout = null;
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title> Consignment API</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #floating-panel {
            position: absolute;
            top: 10px;
            /*left: 25%;*/
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
            text-align: center;
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }

        ._style_4kISXD {
            border: 1px solid !important;
            border-color: #A6A5A5 !important;
            border-radius: 4px !important;
            font-size: 12px !important;
            height: 14px !important;
            display: inline !important;
            padding-left: 8px !important;
            padding-right: 8px !important;
            padding-top: 4px !important;
            padding-bottom: 4px !important;
        }

        .textfont {
            font-family: ff-clan-web-pro,"Helvetica Neue",Helvetica,sans-serif !important;
            font-weight: 400 !important;
        }

        .lowfont {
            font-weight: 300 !important;
        }
    </style>
</head>
<body>
    <div class="box">
        <div id="floating-panel">
            @if (ViewBag.fromplace != null && ViewBag.fromplace != "null" && ViewBag.fromplace != "")
            {

                <span class="textfont"> @ViewBag.fromplace </span><B> -> </B> <span class="textfont"> @ViewBag.toplace</span>

                <div class="progress" style="margin-bottom:-8px">
                    <div class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 100%; color: #11939A;height:3px ">

                    </div>
                </div>
                if (ViewBag.message == "TRIP COMPLETE")
                {
                    <h3>TRIP COMPLETE</h3>
                }
                else
                {
                    if (ViewBag.vehiclesdetails == null && ViewBag.vehiclesdetails == "null" && ViewBag.vehiclesdetails == "")
                    {
                        <h3>GPS NOT WORKING</h3>
                    }
                    else
                    {

                        foreach (var item in ViewBag.vehiclesdetails)
                        {
                            <div class="_style_4kISXD"><span>@item.VEHICLENUMBER</span></div><br />
                            <span class="textfont"> date</span><span class="lowfont"> @item.DATE</span><br />
                            <span class="textfont">Current Location </span><span class="lowfont">@item.PLACE</span><br />
                            <span class="textfont">Estimated Time of arrival</span><span id="eto" class="lowfont"> </span>
                            <input type="hidden" id="hilat" value="@item.LATITUDE" />
                            <input type="hidden" id="hilang" value="@item.LONGITUDE" />
                              <input type="hidden" id="hitoplace" value="@ViewBag.toplace" />
                        }

                    }
                }
            }
            else
            {
                <h1>DATA NOT AVLIABLE</h1>
            }

        </div>
    </div>
    <div id="map"></div>
    <script>

        window.onload = function () {
          
            GetLocation();
            window.setTimeout(function () {
                initMap1();
                getDistance();
            }, 1000)

        }

        function initMap1() {
         //   var directions = new GDirections();
            var lattitude = $("#hilat").val();
            var langitude = $("#hilang").val();
            //var wp = new Array();
            //wp[0] = new GLatLng(32.742149, 119.337218);
            //wp[1] = new GLatLng(32.735347, 119.328485);
            //directions.loadFromWaypoints(wp);
            


            var myLatLng = { lat: parseFloat(lattitude), lng: parseFloat(langitude) };

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: myLatLng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

         var la=   localStorage.getItem("latitude");
          var lo=  localStorage.getItem("longitude");

            var line = new google.maps.Polyline({
                path: [new google.maps.LatLng(parseFloat(lattitude), parseFloat(langitude)), new google.maps.LatLng(la,lo)],
                strokeColor: "#FF0000",
                strokeOpacity: 1.0,
                strokeWeight: 10,
                geodesic: true,
                map: map
            });


            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                icon: '/Truck/yellow_truck.png',
                title: 'Hello World!',
            });
         //   alert(lattitude + "," + langitude+"-----------"+la+","+lo)
          


        }



        function GetLocation() {
            var geocoder = new google.maps.Geocoder();
         //   alert($("#hitoplace").val());
            var address = $("#hitoplace").val();//'Pune, Maharashtra';
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var latitude = results[0].geometry.location.lat();
                    var longitude = results[0].geometry.location.lng();
                   // alert("Latitude: " + latitude + "\nLongitude: " + longitude);
                    localStorage.setItem("latitude", latitude);
                    localStorage.setItem("longitude", longitude);
                } else {
                   // alert("Request failed.")
                }
            });
        };








        function getDistance() {
            //Find the distance
            var lattitude = $("#hilat").val();
            var langitude = $("#hilang").val();

            var la = localStorage.getItem("latitude");
            var lo = localStorage.getItem("longitude");


            var lati = parseFloat($("#hilat").val());

            var lang = parseFloat($("#hilang").val());

            var lati1 = parseFloat(la);

            var lang2 = parseFloat(lo);



     //       alert(la + "okkk," + lo);

         //   var distanceService = new google.maps.DistanceMatrixService();
           // distanceService.getDistanceMatrix({
           //     origins: [21.0976333333333, 72.883135],
           //     destinations: [18.5204303, 73.85674369999992],
           //     travelMode: google.maps.TravelMode.DRIVING,
           //     unitSystem: google.maps.UnitSystem.METRIC,
           //     durationInTraffic: true,
           //     avoidHighways: false,
           //     avoidTolls: false
           // },
           //function (response, status) {
           //    if (status !== google.maps.DistanceMatrixStatus.OK) {
           //        console.log('Error:', status);
           //    } else {
           //        console.log(response);
           //        alert(response.rows[0].elements[0].distance.text);
           //        alert(response.rows[0].elements[0].duration.text);
           //     //   $("#distance").text(response.rows[0].elements[0].distance.text).show();
           //      //  $("#duration").text(response.rows[0].elements[0].duration.text).show();
           //    }
            //});



            var lattitude = $("#hilat").val();
            var langitude = $("#hilang").val();

            var la = localStorage.getItem("latitude");
            var lo = localStorage.getItem("longitude");


            var lati = parseFloat($("#hilat").val());

            var lang = parseFloat($("#hilang").val());

          //  alert(la + "," + lo + "----" + lati + "," + lang);
            var origin1 = new google.maps.LatLng(lati, lang);
            //var origin2 = 'Greenwich, England';
            //var destinationA = 'Stockholm, Sweden';
            var destinationB = new google.maps.LatLng(la, lo);

            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix(
              {
                  origins: [origin1],
                  destinations: [destinationB],
                  travelMode: 'DRIVING',
                //  transitOptions: TransitOptions,
               //   drivingOptions: DrivingOptions,
                  unitSystem: google.maps.UnitSystem.METRIC,
                  avoidHighways: false,
                  avoidTolls: false,
              }, callback);

            function callback(response, status) {

              //  alert(response.rows[0].elements[0].distance.text);
              //  alert(response.rows[0].elements[0].duration.text);
                var Duration = response.rows[0].elements[0].duration.text;
                var Distance = response.rows[0].elements[0].distance.text;
                $("#eto").text(" "+ Duration+"("+Distance+")")
                // See Parsing the Results for
                // the basics of a callback function.
            }











        }








    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0souWqrnGUzqJbZ1CTO-CW5rw0QTYkuU&callback=initMap&libraries=geometry">
    </script>
</body>
</html>
